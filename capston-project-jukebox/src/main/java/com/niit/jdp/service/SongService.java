
package com.niit.jdp.service;

import javax.sound.sampled.*;
import java.io.File;
import java.io.IOException;
import java.sql.*;
import java.util.Scanner;

public class SongService {
    //this method play a particular song it will take the song id which
    //you want to play
    public void playParticular(int songId) {
        Scanner sc = new Scanner(System.in);
        try {
            //create object DatabaseService class....
            DatabaseService connection = new DatabaseService();
            //create a object connection interface and connect to database..
            Connection getConnection = connection.connect();
            String query = "select Paths from songpath4 where songId = ?";
            //Executes the SQL query in this PreparedStatement
            // object and returns the ResultSet object generated by the query.
            PreparedStatement preparedStatement = getConnection.prepareStatement(query);
            //The driver converts this to an SQL BIGINT value
            // when it sends it to the database.
            preparedStatement.setInt(1, songId);
            //executeQuery this predefines method
            ResultSet resultSet = preparedStatement.executeQuery();
            while (resultSet.next()) {
                //return the value from the table (path of song(query))..
                File file = new File(resultSet.getString(1));
                // create AudioInputStream object
                AudioInputStream audioStream = AudioSystem.getAudioInputStream(file);
                // create clip reference
                Clip clip = AudioSystem.getClip();
                // open audioInputStream to the clip
                clip.open(audioStream);
                String response = "";
                while (!response.equals("X")) {
                    System.out.println("P = play/Resume, S = Pause, R = Reset, N = Next, X= End");
                    response = sc.next();
                   // clip.loop(Clip.LOOP_CONTINUOUSLY);
                    switch (response) {
                        case ("P"):
                            clip.start();
                            break;
                        case ("S"):
                            clip.stop();
                            break;
                        case ("R"):
                            clip.setMicrosecondPosition(0);
                            clip.start();
                            break;
                        case ("X"):
                            clip.stop();
                            return;

                        case("N"):
                            clip.close();
                            clip.setMicrosecondPosition(0);
                            clip.start();

                        break;

                        default:
                            System.out.println("Not a valid response");
                    }
                }
            }
        } catch (UnsupportedAudioFileException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (LineUnavailableException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}